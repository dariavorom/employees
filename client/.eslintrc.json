{
	"env": {
		"browser": true,
		"es6": true
	},
	"extends": [
		"eslint:recommended",
		"airbnb/hooks",
		"airbnb-typescript",
		"plugin:react/recommended",
		"plugin:react/jsx-runtime",
		"plugin:@typescript-eslint/recommended",
		"plugin:@typescript-eslint/recommended-requiring-type-checking",
		"plugin:prettier/recommended",
		"plugin:import/recommended"
	],
	// Specifying Parser
	"parser": "@typescript-eslint/parser",
	"parserOptions": {
		"sourceType": "module",
		"project": ["**/tsconfig.eslint.json"]
	},
	// Configuring third-party plugins
	"plugins": ["react", "@typescript-eslint", "simple-import-sort"],
	"settings": {
		"import/resolver": {
			"typescript": {
				"project": "**/tsconfig.eslint.json"
			}
		},
		"react": {
			"version": "detect"
		}
	},
	"rules": {
		"linebreak-style": "off",
		// Configure prettier
		"prettier/prettier": [
			"error",
			{
				"printWidth": 100,
				"endOfLine": "lf",
				"singleQuote": true,
				"tabWidth": 4,
				"indentStyle": "space",
				"useTabs": true,
				"trailingComma": "es5"
			}
		],
		// Disallow the `any` type.
		"@typescript-eslint/no-explicit-any": "warn",
		"@typescript-eslint/ban-types": [
			"error",
			{
				"extendDefaults": true,
				"types": {
					"{}": false
				}
			}
		],
		"react-hooks/exhaustive-deps": "off",
		// Enforce the use of the shorthand syntax.
		"object-shorthand": "error",
		"no-console": "warn",
		"@typescript-eslint/no-misused-promises": [
			"error",
			{
				"checksVoidReturn": false
			}
		],
		"simple-import-sort/imports": [
			"error",
			{
				"groups": [
					// Packages `react` related packages come first.
					["^react", "^@?\\w"],
					// Internal packages.
					["^(@|components)(/.*|$)"],
					// Side effect imports.
					["^\\u0000"],
					// Parent imports. Put `..` last.
					["^\\.\\.(?!/?$)", "^\\.\\./?$"],
					// Other relative imports. Put same-folder imports and `.` last.
					["^\\./(?=.*/)(?!/?$)", "^\\.(?!/?$)", "^\\./?$"],
					// Style imports.
					["^.+\\.?(css)$"]
				]
			}
		],
		"simple-import-sort/exports": "error"
	}
}
